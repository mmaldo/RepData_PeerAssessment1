HoursYear <- 365*24
HoursYear
ls()
c(2,3,5,8,13)
country = c("Brazil","China","India","USA")
LifeExpectancy = c(74,76,65,83,79)
country
LifeExpectancy
Country = country
Country
c("Brazil","74","China","76")
Country[1]
LifeExpectancy[3]
Sequence = seq(1,100,2)
Sequence
Data = data.frame(country, LifeExpectancy)
Country = c("Brazil","China","India","Switzerland","USA")
Data = data.frame(country, LifeExpectancy)
Data = data.frame(Country, LifeExpectancy)
Data
Population = c(199000,1390000,1240000,7997,318000)
Data2 = cbind(Data,Population)
Data2
Country = c("Austrailia","Greece")
LifeExpectancy = c(82,81)
Population = c(23050, 11125)
NewData = data.fame(country,LifeExpectancy,Population)
NewData = data.frame(country,LifeExpectancy,Population)
NewData
NewData = data.frame(Country,LifeExpectancy,Population)
NewData
Data3 = rbind(Data2,NewData)
Data3
q()
getwd()
setwd("repos")
setwd(..)
setwd("..")
setwd("GitHub")
list.files()
setwd(""RepData_PeerAssessment1"")
setwd("RepData_PeerAssessment1")
getwd()
list.files()
library(lattice)
library(ggplot2)
library(mice)
library(plyr)
library(knitr)
library(grid)
library(gridExtra)
install.packages("gridExtra")
library(lattice)
library(ggplot2)
library(mice)
library(plyr)
library(knitr)
library(grid)
library(gridExtra)
```
library(lattice)
library(ggplot2)
library(mice)
library(plyr)
library(knitr)
library(grid)
library(gridExtra)
data<-read.csv("activity/activity.csv")
data[,"date"]<-as.Date(data$date)
sum(is.na(data))
totalStepsPerDay<-ddply(data,.(date),summarize,Total=sum(steps,na.rm=TRUE))
class = nclass.Sturges(totalStepsPerDay$Total)
bin=range(totalStepsPerDay$Total)/class
ggplot(totalStepsPerDay,aes(x=Total))+geom_histogram(aes(fill = ..count..),binwidth = bin[2])
mean(totalStepsPerDay$Total)
median(totalStepsPerDay$Total)
averageStepsPerinterval<-ddply(data,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
averageStepsPerinterval<-ddply(data,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
averageStepsPerinterval[which.max(averageStepsPerinterval$meanSteps),]
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
timeData = data.frame(data,time=as.numeric(factor(data$date)))
miceData = data.frame(steps=timeData$steps,date=timeData$time,interval=timeData$interval)
imp <- imp <- mice(miceData, m = 5, seed = 23109)
xyplot(imp, steps ~ interval | .imp, pch = 20, cex = 1.4)
xyplot(imp, steps ~ interval | .imp, pch = 20, cex = 1.4)
imputedData=complete(imp)
recombinedData = data.frame(steps=imputedData$steps,date=data$date,interval=imputedData$interval)
imputedTotalStepsPerDay<-ddply(recombinedData,.(date),summarize,Total=sum(steps))
class = nclass.Sturges(imputedTotalStepsPerDay$Total)
bin=range(imputedTotalStepsPerDay$Total)/class
ggplot(imputedTotalStepsPerDay,aes(x=Total))+geom_histogram(aes(fill = ..count..),binwidth = bin[2])
mean(imputedTotalStepsPerDay$Total)
median(imputedTotalStepsPerDay$Total)
recombinedData<-transform(recombinedData ,week = ifelse(weekdays(data$date) %in% c('Sunday','Saturday') ,"Weekend","Weekday" ))
averageStepsPerinterval<-ddply(recombinedData,.(interval),summarize,meanSteps=mean(steps))
newaverageStepsPerinterval<-ddply(recombinedData,.(interval),summarize,meanSteps=mean(steps))
newaverageStepsPerinterval<-ddply(recombinedData,.(interval,Week),summarize,meanSteps=mean(steps))
newaverageStepsPerinterval<-ddply(recombinedData,.(interval,week),summarize,meanSteps=mean(steps))
head(newaverageStepsPerinterval)
newaverageStepsPerinterval<-ddply(recombinedData,.(week,interval),summarize,meanSteps=mean(steps))
head(newaverageStepsPerinterval)
ggplot(newaverageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(newaverageStepsPerinterval, aes(x=interval, y=meanSteps,group=Week))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(newaverageStepsPerinterval, aes(x=interval, y=meanSteps,group=week))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(newaverageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1,subset=.(week == 'Weekday'))+scale_colour_gradient(high="#56B4E9",low="#D55E00")
weekday=ggplot(newaverageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1,subset=.(week == 'Weekday'))+scale_colour_gradient(high="#56B4E9",low="#D55E00")
weekend=ggplot(newaverageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1,subset=.(week == 'Weekend'))+scale_colour_gradient(high="#56B4E9",low="#D55E00")
weekend
weekday
multiplot(weekday, weekend, cols=1)
grid.arrange(weekday,weekend, ncol=1)
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
newaverageStepsPerinterval
newaverageStepsPerinterval<-ddply(recombinedData,.(week,interval),summarize,meanSteps=mean(steps))
newaverageStepsPerinterval
ggplot(newaverageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
totalStepsPerDay
class = nclass.Sturges(totalStepsPerDay$date)
bin=range(totalStepsPerDay$Total)/class
ggplot(totalStepsPerDay,aes(x=Total))+geom_histogram(aes(fill = ..count..),binwidth = bin[2])
bin=range(totalStepsPerDay$date)/class
bin=nrow(totalStepsPerDay$date)/class
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..),binwidth = bin[2])
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(binwidth = bin[2])
totalStepsPerDay
ggplot(totalStepsPerDay,aes(date))+geom_histogram(binwidth = bin[2])
ggplot(totalStepsPerDay,aes(date))+geom_histogram()
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = bin[2])
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(weight=Total),binwidth = bin[2])
bin[2]
bin
nrow(totalStepsPerDay)
nrow(totalStepsPerDay$date)
bin=nrow(totalStepsPerDay)/class
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(weight=Total),binwidth = bin[2])
bin
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(weight=Total),binwidth = bin[1])
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = bin[2])
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = bin[1])
class = nclass.Sturges(totalStepsPerDay$date)
nclass.Sturges(totalStepsPerDay$date)
nclass.Sturges(totalStepsPerDay)
nclass.Sturges(nrow(totalStepsPerDay))
nclass.Sturges(nrow(totalStepsPerDay$date))
nclass.Sturges(nrow(totalStepsPerDay$Total))
nclass.Sturges(nrow(totalStepsPerDay))
nclass.Sturges(61)
nclass.Sturges(62)
nclass.Sturges()
?nclass.Sturges()
nclass.Sturges(nrow(totalStepsPerDay$date))
nclass.Sturges(totalStepsPerDay$date)
bin=nrow(totalStepsPerDay)/class
bin
nrow(totalStepsPerDay)/class
class
bin=nrow(totalStepsPerDay)/1
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = bin[1])
bin
bin=nrow(totalStepsPerDay)/30
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = bin[1])
bin
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = 3)
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = 2)
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total))
ggplot(totalStepsPerDay,aes(x=date))+geom_histogram(aes(fill = ..count..,weight=Total),binwidth = 1)
nclass.Sturges(totalStepsPerDay$date)
imp
plot(imp1, c("steps"))
plot(imp, c("steps"))
plot(imp, c("steps", "interval"))
plot(imp, c("steps", "interval"))
plot(imp, c("steps"), layout=c(1,1))
plot(imp, c("steps"), layout=c(1,2))
stripplot(imp, c("steps"),pch = 20, cex = 1.2)
?stripplot.mids
stripplot(imp, steps,pch = 20, cex = 1.2)
stripplot(imp, interval+time,pch = 20, cex = 1.2)
stripplot(imp, interval+time~.imp,pch = 20, cex = 1.2)
str(imp)
stripplot(imp, interval+date~.imp,pch = 20, cex = 1.2)
View(recombinedData)
imp$imp$steps
library("VIM")
marginplot(data[, c("steps")], col = mdc(1:2), cex = 1.2,cex.lab = 1.2, cex.numbers = 1.3, pch = 19)
head(data)
data[, c("steps")]
marginplot(data[, c("steps")], col = mdc(1:2), cex = 1.2,cex.lab = 1.2, cex.numbers = 1.3, pch = 19)
marginplot(data[, c("steps","interval")], col = mdc(1:2), cex = 1.2,cex.lab = 1.2, cex.numbers = 1.3, pch = 19)
marginplot(data[, c("interval","steps")], col = mdc(1:2), cex = 1.2,cex.lab = 1.2, cex.numbers = 1.3, pch = 19)
sum(is.na(data))
marginplot(data[, c("date","steps")], col = mdc(1:2), cex = 1.2,cex.lab = 1.2, cex.numbers = 1.3, pch = 19)
marginplot(data[, c("steps","interval")], col = mdc(1:2), cex = 1.2,cex.lab = 1.2, cex.numbers = 1.3, pch = 19)
R> densityplot(imp.kendall, scales = list(x = list(relation = "free")),
+ layout = c(3, 1))
R> densityplot(imp.kendall, scales = list(x = list(relation = "free")),layout = c(3, 1))
R> densityplot(imp, scales = list(x = list(relation = "free")),layout = c(3, 1))
densityplot(imp, scales = list(x = list(relation = "free")),layout = c(3, 1))
densityplot(imp, scales = list(x = list(relation = "free")),layout = c(1, 1))
tail(data)
data[20,]
data[1:20,]
data$interval/5
data[1:20,]
data[1:30,]
data[1:40,]
data[1:40,]*60
data[1:40,"interval"]*60
18000-15300
15000-14700
data[1:40,"interval"]*60
str(data)
data[1:40,"interval"]/60
data[1:40,"interval"]/55
data[1:40,"interval"]/12
data[1:40,"interval"]/5
data[1:40,"interval"]/%100
1234%/%100
data[1:40,"interval"]%/%100
data[1:40,"interval"]
1234%%100
?plot.ts
help(ts.plot)
5/60
5/55
60/5
100/5
data[1:40,"interval"]
data[1:40,"interval"]-55
?striptime
?strptime
strptime(data$interval)
strptime(data$interval,format=%M)
strptime(data$interval,format="%M")
strptime(data$interval,format="%H%M")
head(strptime(data$interval,format="%H%M"))
tail(strptime(data$interval,format="%H%M"))
dminutes(data$interval)
library(lubridate)
dminutes(data$interval)
tail(dminutes(data$interval))
head(dminutes(data$interval))
dminutes(data$interval)[1:13]
dhours(data$interval)[1:13]
as.period(data$interval)
as.period(data$interval)[1:33]
as.period(data$interval,"minutes")[1:33]
as.interval(data$interval,"minutes")[1:33]
as.interval(data$interval,0)[1:33]
hm(data$interval)
hms(data$interval)
h(data$interval)
minuters(data$interval)
minutes(data$interval)
head(minutes(data$interval))
minutes(data$interval)[1:13]
hours(data$interval)[1:13]
difftime(data$interval)
duration(data$interval)
duration(data$interval)[1:14]
hour(data$interval)[1:14]
h(data$interval)[1:14]
hm(data$interval)[1:14]
library(stringr)
str_pad(data$interval, 1, side = "left", pad = "0")
str_pad(data$interval, 4, side = "left", pad = "0")
str_pad(data$interval, 5, side = "left", pad = "0")
View(data)
str_pad(data$interval, 4, side = "left", pad = "0")
hm(str_pad(data$interval, 4, side = "left", pad = "0"))
data2<-data
data2$interval<-str_pad(data$interval, 4, side = "left", pad = "0")
head(data)
head(data2)
averageStepsPerinterval2<-ddply(data,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
hm(data2$interval)[1:14]
hms(data2$interval)[1:14]
hour(data2$interval)[1:14]
duration(data2$interval)
minutes(data2$interval)[1:13]
substr(data2$interval,2,2) <- ":"
head(data2$interval)
data2<-data
averageStepsPerinterval2<-ddply(data,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
str_pad(data$interval, 4, side = "left", pad = ":0")
grep([0-9]{2},data2$interval)
grep("[0-9]{2}",data2$interval)
grep("[0-9]{2}",data2$interval,value=TRUE)
teststring<-"0000"
substr(x,3,3) <- ":"
substr(teststring,3,3) <- ":"
teststring
?substr
substr(x,3,3) <- ":"
teststring<-"0000"
substr(x,3) <- ":"
substr(teststring,3) <- ":"
strsplit(teststring,"[0-9]{2}")
teststring
strsplit(teststring,"[0-9][0-9]")
strsplit(teststring,"^[0-9]{2}")
strsplit(teststring,"^[0-9]")
strsplit(teststring,"^[0]")
strsplit(teststring,"00")
strsplit(teststring,"OO")
teststring<-"0000"
strsplit(teststring,"00")
strsplit(teststring,"oo")
strsplit(teststring,"OO")
strsplit(teststring,"^[0]")
teststring<-"0000"
strsplit(teststring,"^[0-9]{2}")
teststring<-"00A0"
strsplit(teststring,"A")
strptime(data2$interval, "%H:%M")
strptime(data2$interval, "%H%M")
strptime(data2$interval, "%H%M")
data2$interval "%H%M"
data2$interval
str_pad(data2$interval, 4, side = "left", pad = "0")
data2$interval
strptime(data2$interval, "%H%M")
data2$interval
str_pad(data2$interval, 4, side = "left", pad = "0")
data2$interval<-str_pad(data2$interval, 4, side = "left", pad = "0")
str_pad(data2$interval, 4, side = "left", pad = "0")
strptime(data2$interval, "%H%M")
data2$interval
strptime(data2$interval, "%H%M")
data2$interval<-strptime(data2$interval, "%H%M")
HM(data2$interval)
hm(data2$interval)
ymd_hms(data2$interval)
data2$interval<-ymd_hms(data2$interval)
hm(data2$interval)
month(data2<-interval)
month(data2$interval)
data2<-data
data2$interval<-str_pad(data2$interval, 4, side = "left", pad = "0")
hm(data2$interval)
ymd_hms(data2$interval)
data2$interval<-strptime(data2$interval, "%H%M")
ymd_hms(data2$interval)
hms(data2$interval)
ymd_hms(data2$interval)
data2$interval<-ymd_hms(data2$interval)
head(data2)
str(data2)
data2<-data
data2$interval<-str_pad(data2$interval, 4, side = "left", pad = "0")
data2$interval<-strptime(data2$interval, "%H%M")
str(data2)
minutes(data2$interval)
hours(data2$interval)
data2$interval
months(data2$interval)
minutes(data2$interval)
months(data2$interval)
hours(data2$interval)+minutes(data2$interval)
data2$interval<-ymd_hms(data2$interval)
data2
minutes(data2$interval)
str(data2)
head(minutes(data2$interval))
hm(data2$interval)
data2[3,3]-[4,3]
data2[3,3]-data2[4,3]
data2[3,3]-data2[6,3]
qplot(data2,data2$interval)
qplot(data2,data2$interval,data2$steps)
?qplot
qplot(data2$interval,data2$steps)
averageStepsPerinterval2<-ddply(data,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
head(averageStepsPerinterval2)
averageStepsPerinterval2<-ddply(data2,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")+ scale_x_date(labels = date_format("%H%M"))
library(scales)
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")+ scale_x_date(labels = date_format("%H%M"))
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")+ scale_x_date(labels = datetime_format("%H%M"))
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")+ scale_x_datetime(labels = date_format("%H%M"))
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")+ scale_x_datetime(labels = date_format("%H%M"),breaks = date_breaks("2 hour"))
tail(data2)
ggplot(averageStepsPerinterval2, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+scale_colour_gradient(high="#56B4E9",low="#D55E00")+ scale_x_datetime(labels = date_format("%H%M"),breaks = date_breaks("5 hour"))
library(stringr)
averageStepsPerinterval[which.max(averageStepsPerinterval$meanSteps), ]
hm(data2$interval)
data2$interval
data2$interval
minutes(data2$interval)
second(data2$interval)
hours(data2$interval)
hour(data2$interval)
hour(data2$interval)+minute(data2$interval)
hour(data2$interval[1])+minute(data2$interval[1])
hour(data2$interval[1])+ minute(data2$interval[1])
hour(data2$interval[50])+ minute(data2$interval[50])
hour(data2$interval[50])
print(hour(data2$interval[55])":"minute(data2$interval)[55])
print(hour(data2$interval[55]):minute(data2$interval)[55])
print(hour(data2$interval[55]),":",minute(data2$interval)[55])
print(hour(data2$interval[55]),minute(data2$interval)[55])
print(hour(data2$interval[55])
)
averageStepsPerinterval[which.max(averageStepsPerinterval$meanSteps), ]
averageStepsPerinterval2<-ddply(data,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
averageStepsPerinterval2[which.max(averageStepsPerinterval$meanSteps),]
averageStepsPerinterval2<-ddply(data2,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
averageStepsPerinterval2[which.max(averageStepsPerinterval$meanSteps),]
hour(averageStepsPerinterval2[which.max(averageStepsPerinterval$meanSteps),])
max<-averageStepsPerinterval2[which.max(averageStepsPerinterval$meanSteps),]
max[1]
hour(max[1])
str(max)
hours(max[1])
hour(max[1])
hour(as.date(max[1]))
hour(as.Date(max[1]))
ma
max
str(max[1])
minute(max[1])
minute(max[1])
ymdhms(max[1])
ymd_hms(max[1])
max[1]
str(max[1])
interval<-max[1]
interval
interval[1]
interval[1,1]
str(max[1,1])
hour(max[1,1])
?print
print(hour(max[1,1]),minute[1,1])
print(table(hour(max[1,1]),minute[1,1])
)
print(paste(hour(max[1,1],minute(max[1,1])))
)
print(paste(hour(max[1,1]),minute(max[1,1])))
print(paste(hour(max[1,1]),minute(max[1,1]),sep=""))
print(paste(hour(max[1,1]),minute(max[1,1]),max[2,2],sep=""))
print(paste(hour(max[1,1]),minute(max[1,1]),max[2],sep=""))
print(paste(hour(max[1,1]),minute(max[1,1]),sep=""))
max[2]
print(paste(hour(max[1,1]),minute(max[1,1])," ",max[2],sep=""))
print(paste(hour(max[1,1]),":",minute(max[1,1])," ",max[2],sep=""))
data <- read.csv("activity/activity.csv")
data[, "date"] <- as.Date(data$date)
time <- str_pad(data$interval, 4, side = "left", pad = "0")
time
time <- strptime(data$interval, "%H%M")
time
time
time <- str_pad(data$interval, 4, side = "left", pad = "0")
time
time <- strptime(time, "%H%M")
time
newaverageStepsPerinterva
newaverageStepsPerinterval
time
averageStepsPerinterval
time<-str_pad(data$interval, 4, side = "left", pad = "0")
time <- strptime(time, "%H%M")
time<-ymd_hms(time)
averageStepsPerinterval<-ddply(data,.(interval),summarize,meanSteps=mean(steps,na.rm=TRUE))
averageStepsPerinterval<-cbind(averageStepsPerinterval,time)
averageStepsPerinterval
recombinedData
newaverageStepsPerinterval<-ddply(recombinedData,.(interval,week),summarize,meanSteps=mean(steps))
newaverageStepsPerinterval
recombinedData<-cbind(recombinedData,time)
newaverageStepsPerinterval<-ddply(recombinedData,.(interval,week,time),summarize,meanSteps=mean(steps))
newaverageStepsPerinterval
times = c("17:05", "16:53", "16:29", ...)
times = c("17:05", "16:53", "16:29",)
times = c("17:05", "16:53", "16:29")
times = as.POSIXct(strptime(times, "%H:%M"))
POSIXct format
qplot(times, fill=I('steelblue'), col=I('black'))#Plot
times
imp
x <-c(-0.5, 0,1,1,1.5)
y <-c(0,0,2,0,0)
plot(x, y, lwd = 3, frame = FALSE, type = "l")
1.5*.75/2
pbeta(0.75, 2, 1)
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("Imbalance = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
galton
data(galton)
