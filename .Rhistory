ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="red")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9",size=1)
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9",size=.2)
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9",size=.5)
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9",size=.7)
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9",size=.8)
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9",size=.75)
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#56B4E9")
#999999
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#999999")
#999999
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#999999")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour="#E69F00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(colour = meanSteps)+ scale_colour_gradient(low="red")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps)+ scale_colour_gradient(low="red")
)
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(low="red")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(low="blue")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(low="#0072B2")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(high="#0072B2")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(low="red")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(high="red")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(high="red",low="blue")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(high="blue",low="red")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(high="#56B4E9",low="red")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps))+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
nclass.Sturges(totalStepsPerDay$Total)
ggplot(totalStepsPerDay,aes(x=Total))+geom_histogram(aes(fill = ..count..),binwidth = bin[2])
ggplot(totalStepsPerDay,aes(x=Total))+geom_histogram(aes(fill = count),binwidth = bin[2])
ggplot(totalStepsPerDay,aes(x=Total))+geom_histogram(aes(fill = ..count..),binwidth = bin[2])
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
summary(totalStepsPerDay)
str(summary)
str(summary(totalStepsPerDay))
str(summary(totalStepsPerDay)$Total)
summary(totalStepsPerDay)[Total]
summary(totalStepsPerDay)["Mean"]
summary(totalStepsPerDay)[Mean]
summary(totalStepsPerDay)$Total
summary(totalStepsPerDay)$Mean
summary(totalStepsPerDay)$Total$Mean
summary(totalStepsPerDay)$Total["Mean"]
summary(totalStepsPerDay$Total)
mean(totalStepsPerDay$Total)
median(totalStepsPerDay$Total)
summary(totalStepsPerDay)
summary(totalStepsPerDay$Total, digits = 5)
summary(totalStepsPerDay$Total, digits = 4)
summary(totalStepsPerDay$Total, digits = 6)
summary(totalStepsPerDay$Total, digits = 5)
?summary
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
max(averageStepsPerinterval)
?max
pmax(averageStepsPerinterval)
pmax(averageStepsPerinterval$meansteps)
pmax(averageStepsPerinterval$meanSteps)
max(averageStepsPerinterval$meanSteps)
data[which(max(averageStepsPerinterval$meanSteps))]
data[which.max(averageStepsPerinterval$meanSteps))]
data[which.max(averageStepsPerinterval$meanSteps)]
data[which.max(averageStepsPerinterval$meanSteps),]
averageStepsPerinterval[which.max(averageStepsPerinterval$meanSteps),]
sd(data$steps,na.rm=TRUE)
plot<-ggplot(data,aes(x=date,y=steps))+ geom_point()
plot
plot<-ggplot(data,aes(x=date,y=interval))+ geom_point()
plot
plot<-ggplot(data,aes(x=interval,y=steps))+ geom_point()
plot
?glm
plot<-ggplot(data,aes(x=interval,y=steps))+ geom_point(aes(colour = meanSteps))+scale_colour_gradient(high="#56B4E9",low="#D55E00")
plot
plot<-ggplot(data,aes(x=interval,y=steps))+ geom_point(aes(colour = steps))+scale_colour_gradient(high="#56B4E9",low="#D55E00")
plot
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_points(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_point(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_point(aes(colour = meanSteps))+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_point(aes(colour = meanSteps))+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_line(aes(colour = meanSteps),size=1)+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_point(aes(colour = meanSteps))+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
plot
ggplot(averageStepsPerinterval, aes(x=interval, y=meanSteps))+geom_point(aes(colour = meanSteps))+ scale_colour_gradient(high="#56B4E9",low="#D55E00")
library(kernlab)
install.package(kernlab)
install.packages(kernlab)
install.packages("kernlab")
library(kernlab)
n<-nrow(data)
testIndex <- sample(1:n, floor(n/3))
testtrain <- data[-testIndex, ]
datatest <- data[testIndex, ]
datatrain <- data[-testIndex, ]
datatrain
head(datatrain)
vanilladot(datatrain$interval,steps
)
vanilladot(datatrain$interval,datatrain$steps
)
?vanilladot
vanilladot(datatrain)
polydot(datatrain)
n<-nrow(newdata)
testIndex <- sample(1:n, floor(n/3))
datatrain <- newdata[-testIndex, ]
datatest <- newdata[testIndex, ]
datatrain[,1:2]
datatrain[,c(1,3)]
head(datatrain[,c(1,3)])
polydot(datatrain)
polykernal<-polydot(degree=2)
polykernal
?kpar
kpar(polykernal)
polykernal(datatrain$interval,datatrain$steps)
svp <- ksvm(datatrain$interval,datatrain$steps,type="C-svc",kernel='polydot',C=100,scaled=c())
lm_model <- lm(steps ∼ interval + interval^2, data=traindata)
lm_model <- lm(steps ∼ interval + interval^2, data=datatrain)
summary(lm-model)
summary(lm_model)
lm_model <- lm(steps ∼ interval, data=datatrain)
summary(lm_model)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4, data=datatrain)
summary(lm_model)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4+interval^5+interval^6, data=datatrain)
summary(lm_model)
plot(lm_model)
plot(lm_model)
plot(lm_model)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4+interval^5+interval^6,interval^7, data=datatrain)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4+interval^5+interval^6+interval^7, data=datatrain)
plot(lm_model)
summary(lm_model)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4+interval^5+interval^6+interval^7+interval^8, data=datatrain)
summary(lm_model)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4+interval^5+interval^6, data=datatrain)
summary(lm_model)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4+interval^5, data=datatrain)
summary(lm_model)
lm_model <- lm(steps ∼ interval+interval^2+interval^3+interval^4, data=datatrain)
summary(lm_model)
lm_model <- glm(steps ∼ interval+interval^2+interval^3+interval^4+interval^5, data=datatrain)
summary(lm_model)
plot(lm_model)
?glm
plot(datatrain)
lm_model <- glm(steps ∼ interval+interval^2+interval^3, data=datatrain)
?glm
plot(lm_model)
summary(lm_model)
lm_model <- glm(steps ∼ interval+interval^2+interval^3, data=datatrain)
lm_model$coefficients
lm_model <- glm(steps ∼ interval+interval^2+interval^3, data=datatrain)
plot(datatrain$steps,datatrain$interval)
lm_model <- glm(steps ∼ interval+interval^2+interval^3, data=datatrain)
plot(datatrain$interval,datatrain$steps)
abline(coef=lm_model$coefficients)
abline(coef=lm_model$coefficients,color="red")
abline(coef=lm_model$coefficients,colour="red")
?abline
plot(datatrain$interval,datatrain$steps)
abline(coef=lm_model$coefficients,col="red")
predicted_values <- predict(lm_model, newdata=as.data.frame(cbind(datatest$interval)))
datatest$interval
predicted_values <- predict(lm_model, newdata=as.data.frame(cbind(datatest$interval)))
predicted_values <- predict(lm_model, newdata=as.data.frame(datatest$interval))
predicted_values <- predict(lm_model, newdata=datatest$interval)
predicted_values <- predict(lm_model, data=datatest$interval)
summary(predicted_values)
str(predict)
predicted_values
str(predict)
points()
points(datatest$interval,predicted_values)
str(datatest$interval)
str(predicted_values)
predicted_values <- predict(lm_model, data=datatest$interval)
str(predicted_values)
head(predicted_values)
plot(predicted_values)
names(predicted_values)
install.packages("mi")
?mi
library(mi)
?mi
IMP <- mi.interactive(data)
summary(data)
IMP
missing.pattern.plot(IMP, gray.scale = TRUE)
missing.pattern.plot(data, gray.scale = TRUE)
info <- mi.info(data)
info
IMP <- mi(data, preprocess = TRUE)
?mi
mi.preprocess(data, info)
info$imp.formula
plot(IMP)
str(imp)
info$imp.formula
str(data)
install.packages("HMisc")
install.packages("Hmisc")
ggplot(data[weekdays(data$date)=="Monday",],aes(x=interval,y=steps))+geom_point
ggplot(data[weekdays(data$date)=="Monday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Tuesday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Wednesday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Thursday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Friday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Saturday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Sunday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Sunday",],aes(x=interval,y=steps))+geom_histogram()
ggplot(data[weekdays(data$date)=="Sunday",],aes(x=interval,x=steps))+geom_histogram()
ggplot(data[weekdays(data$date)=="Sunday",],aes(y=interval,x=steps))+geom_histogram()
ggplot(data[weekdays(data$date)=="Sunday",],aes(x=steps))+geom_histogram()
ggplot(data[weekdays(data$date)=="Sunday",],aes(x=interval,y=steps))+geom_point()
ggplot(data[weekdays(data$date)=="Sunday",],aes(x=steps))+geom_histogram()
ggplot(data[weekdays(data$date)=="Monday",],aes(x=steps))+geom_histogram()
ggplot(data[weekdays(data$date)=="Monday",],aes(x=slog(steps))+geom_histogram()
ggplot(data[weekdays(data$date)=="Monday",],aes(x=slog(steps)))+geom_histogram()
ggplot(data[weekdays(data$date)=="Monday",],aes(x=log(steps)))+geom_histogram()
ggplot(data[weekdays(data$date)=="Tuesday",],aes(x=log(steps)))+geom_histogram()
ggplot(data,aes(x=log(steps)))+geom_histogram()
ggplot(data,aes(x=steps))+geom_histogram()
ggplot(data,aes(x=log(steps)))+geom_histogram()
meanlog <- mean(log(data$steps))
meanlog
?mean
meanlog <- mean(log(data$steps),na.rm=TRUE)
meanlog
log(0)
meanlog
mean(log(data$steps),na.rm=TRUE)
log(data$steps)
fitdistr(data$steps, lognomral)
fitdistr(data$steps, log-nomral)
data[na.omit(data)]
data[na.omit(data),]
na.omit(data)
newdata<-na.omit(data)
fitdistr(newdata, log-nomral)
fitdistr(newdata$steps, log-nomral)
fitdistr(newdata$steps, lognomral)
fitdistr(newdata$steps, "lognomral")
fitdistr(newdata$steps, "log-nomral")
fitdistr(newdata$steps, "log-normal")
fitdistr(log(newdata$steps), "log-normal")
install.packages("gPdtest")
library(gPdtest)
gpd.fit(newdata$steps,"combined")
gpd.fit(newdata$steps,"amle")
plot(rpareto(1000, 4.208479, 1.375759))
rpareto(1000, 4.208479, 1.375759)
gpdtest
?ppraeto
??ppraeto
ggplot(data,aes(x=log(steps)))+geom_histogram()
ggplot(totalStepsPerDay,aes(x=Total))+geom_histogram(aes(fill = ..count..),binwidth = bin[2])
plot<-ggplot(data,aes(x=date,y=steps))+ geom_point()
ggplot(data,aes(x=date,y=steps))+ geom_point()
ggplot(data,aes(x=date,y=steps))+ geom_histogram()
ggplot(data,aes(x=date,y=steps))+ geom_bar()
ggplot(data,aes(x=date,y=steps))+ geom_bar(stat="bin")
ggplot(data,aes(x=date,y=steps))+ geom_bar(stat="identity")
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="identity")
ggplot(data,aes(x=interval,y=steps))+ geom_bar()
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="identity" colour="blue")
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="identity", aes(colour="blue"))
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="identity", aes(colour="steps"))
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="identity", fill="white")
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="identity", fill="blue")
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="identity", fill="skyblue")
ggplot(data,aes(x=interval,y=steps))+ geom_bar(stat="bin", fill="skyblue")
ggplot(data,aes(x=interval))+ geom_bar(stat="bin", fill="skyblue")
ggplot(data,aes(x=interval))+ geom_bar(stat="bin", fill="skyblue",weight=steps)
ggplot(data,aes(x=interval))+ geom_bar(stat="bin",weight=steps)
ggplot(data,aes(x=interval,weight=steps))+ geom_bar(stat="bin")
ggplot(data,aes(x=interval,weight=steps))+ geom_hist(stat="bin")
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin")
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue")
summary(data)
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="identity",fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue")
ggplot(data,aes(x=as.factor(interval),weight=steps))+ geom_histogram(stat="bin",fill="skyblue")
ggplot(data,aes(x=as.factor(date),weight=steps))+ geom_histogram(stat="bin",fill="skyblue")
ggplot(data,aes(x=as.factor(interval),weight=steps))+ geom_histogram(stat="bin",fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue")
summary(data)
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue",binwidth=2000)
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue",binwidth=2400)
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue",binwidth=100)
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue",binwidth=50)
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue",binwidth=10)
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue",binwidth=30)
ggplot(data,aes(x=interval,weight=steps))+ geom_bar(stat="bin")
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="identity",fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_histogram(stat="bin",fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_bar(stat="bin",fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_line(stat="bin",fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_line(fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_line()
ggplot(data,aes(x=interval,weight=steps))+ geom_line(stat="bin",fill="skyblue")
ggplot(data,aes(x=interval,weight=steps))+ geom_bar(stat="bin",fill="skyblue")
info$imp.formula
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval+interval^2","interval"="interval~steps+date+steps^2","date"="date~steps+interval+steps^2+interval^2"))
info.upd$imp.formula
IMP <- mi(data)
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval+interval^2","interval"="interval~steps+date","date"="date~steps+interval+interval^2"))
IMP <- mi(data)
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval^2","interval"="interval~steps^2+date","date"="date~steps^2+interval"))
IMP <- mi(data)
plot(IMP)
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval^2","interval"="interval~steps+date", "date"="date~steps+interval^2"))
IMP <- mi(data)
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval^3","interval"="interval~steps^3+date", "date"="date~steps+interval^3"))
IMP <- mi(data)
plot(IMP)
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval","interval"="interval~steps+date", "date"="date~steps+interval"))
IMP <- mi.count(data)
?mi.coun
?mi.count
IMP <- mi.count(steps~date+interval,data=data)
plot(IMP)
IMP
IMP
summary(IMP)
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval","interval"="interval~steps+date", "date"="date~steps+interval"))
plot(IMP)
IMP <- mi(data)
plot(IMP)
info.upd <- update(info, "imp.formula", list("steps" = "steps ~ date + interval^3","interval"="interval~steps^3+date",
"date"="date~steps+interval^3"))
IMP <- mi(data)
plot(IMP)
IMP <- mi(data, niter=400)
plot(data$date,data$steps)
qplot(data$date,data$steps)
install.packages("mice")
ini <- mice( data, m = 5, maxit = 0)
library(mice)
ini <- mice(data, m = 5, maxit = 0)
pred <- ini$predictorMatrix
pred
meth<-ini$method
meth[1] <- "2l.zinb"
imp.zinb <- mice( data, m = 5, maxit = 1, method = meth,predictorMatrix = pred, seed = 1234, print = FALSE)
imp.zinb <- mice( data, m = 5, maxit = 1, method = meth,predictorMatrix = pred, seed = 1234, print = FALSE)
install.packages("countimp")
install.packages("glmmADMB", repos="http://r-forge.r-project.org",
type="source")
imp <- mice(data)
imp <- mice(data)
imp <- mice(data)
imp <- mice(data,m=5)
imp <- mice(data, m = 5, maxit = 0)
md.pattern(nhanes)
md.pattern(data)
p <- md.pairs(data)
p
install.packages("VIM")
marginplot(data, col=c("blue","red","orange"), cex=1.5,
+ cex.lab=1.5, cex.numbers=1.3, pch=19)
marginplot(data, col=c("blue","red","orange"), cex=1.5,cex.lab=1.5, cex.numbers=1.3, pch=19)
library(VIM)
marginplot(data, col=c("blue","red","orange"), cex=1.5,cex.lab=1.5, cex.numbers=1.3, pch=19)
marginplot(data[,c("steps","interval")], col=c("blue","red","orange"), cex=1.5,cex.lab=1.5, cex.numbers=1.3, pch=19)
marginplot(data[,c("steps","interval")], col=c("blue","red","orange"), cex=1.5,cex.lab=1.5, cex.numbers=1.3, pch=19)
pbox(nhanes,pos=1,int=FALSE,cex=1.2)
pbox(data,pos=1,int=FALSE,cex=1.2)
pbox(data$steps,pos=1,int=FALSE,cex=1.2)
pbox(data,pos=1,int=FALSE,cex=1.2)
pbox(data,pos=2,int=FALSE,cex=1.2)
pbox(data,pos=3,int=FALSE,cex=1.2)
pbox(data,pos=2,int=FALSE,cex=1.2)
pbox(data,pos=3,int=FALSE,cex=1.2)
imp
imp$imp
imp$imp$steps
complete(imp)
head(complete(imp))
complete(imp)[1:50,]
library(lattice)
com <- complete(imp, "long", inc=T)
col <- rep(c("blue","red")[1+as.numeric(is.na(imp$data$chl))],6)
col <- rep(c("blue","red")[1+as.numeric(is.na(imp$data$steps))],6)
stripplot(chl~.imp, data=com, jit=TRUE, fac=0.8, col=col, pch=20,
+ cex=1.4, xlab="Imputation number")
stripplot(chl~.imp, data=com, jit=TRUE, fac=0.8, col=col, pch=20,cex=1.4, xlab="Imputation number")
stripplot(steps~.imp, data=com, jit=TRUE, fac=0.8, col=col, pch=20,cex=1.4, xlab="Imputation number")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?nlme
?Bodyweight
Bodyweight
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
plot(imp$imp)
complete(imp)
str(imp)
transformedData<-complete(imp)
is.na(transformedData)
sum(is.na(transformedData))
com
hist(transformedData$steps)
?mice
imp <- mice(data, m = 5, maxit = 5)
imp <- mice(data, m = 5, maxit = 0)
str(data)
imp <- mice(data, m = 5,,vector("pmm", length = ncol(data)), maxit = 5)
imp <- mice(data, m = 5,method = vector("pmm", length = ncol(data)), maxit = 5)
imp <- mice(data, m = 5,method = c("pmm", length = ncol(data)), maxit = 5)
imp <- mice(data, m = 5,method = c("pmm"), maxit = 5)
head(data)
data2 = data.frame(factor(data$steps), data$date,data$interval)
imp <- mice(data2, m = 5, maxit = 5)
complete(imp)
imp <- mice(data2, m = 5, maxit = 5)
data2 = data.frame(factor(data$steps), as.numeric(data$date),data$interval)
head(data2)
imp <- mice(data2, m = 5, maxit = 5)
data2 = data.frame(data$steps, as.numeric(data$date),data$interval)
imp <- mice(data2, m = 5, maxit = 5)
data3 = data.frame(data2$steps, as.Date(data2$date),data2$interval)
imp <- mice(data2, m = 5, maxit = 5, method = c("PMM","PMM","PMM"))
imp <- mice(data, m = 5, maxit = 5, method = c("PMM","PMM","PMM"))
imp <- mice(data, m = 5, maxit = 5, method = c("pmm","pmm","pmm"))
factor(data$date)
levels(data$date)
data$time<-factor(date)
data3 = data.frame(data,time=factordata$date)
data3 = data.frame(data,time=factor(data$date))
data3
head(data3)
data3$time<-levels(time)
head(data3)
head(data3)
data3 = data.frame(data,time=factor(data$date))
head(data3)
levels(data3$time)
as.numeric(levels(data3$time))
as.numeric(factor(data3$time))
as.numeric(data3$time)
data3 = data.frame(data,time=as.numeric(factor(data$date))
)
head(data3)
data4 = data.frame(data3$steps,data3$time,data3$interval)
head(data4)
imp <- mice(data, m = 5, maxit = 5)
imp <- mice(data4, m = 5, maxit = 5)
print(imp)
imp <- mice(data4, seed = 23109)
stripplot(imp, pch = 20, cex = 1.2)
hist(complete$steps)
hist(complete(imp$steps))
head(completeIimp)
head(complete(imp))
hist(complete(imp$data3.steps))
nedata=complte(imp)
nedata=complete(imp)
hist(nedata$data3.steps)
xyplot(imp, data3.steps ~ data3.interval | .imp, pch = 20, cex = 1.4)
datanew = data.frame(nedata$data3.steps,data3$time,nedata$data3.interval)
head(datanew)
datanew = data.frame(nedata$data3.steps,data$time,nedata$data3.interval)
head(data)
datanew = data.frame(nedata$data3.steps,data$date,nedata$data3.interval)
head(datanew)
totalStepsPerDay<-ddply(data,.(date),summarize,Total=sum(steps,na.rm=TRUE))
ddply(data,.(date),summarize,Total=sum(steps,na.rm=TRUE))
library(knitr)
knit2html(PA1_template.Rmd)
getwd()
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
timeData = data.frame(data, time = as.numeric(factor(data$date)))
miceData = data.frame(steps = timeData$steps, date = timeData$time, interval = timeData$interval)
head(timeData)
head(miceData)
imp <- mice(miceData, m = 50, seed = 23109)
library(lubridate)
?lubridate
wday(data$date)
weekday(data$date)
weekdays(data$date)
weekdays(data$time %in% c('Sunday','Saturday')
)
weekdays(data$time %in% c('Sunday','Saturday'))
weekdays(data$date %in% c('Sunday','Saturday')
)
weekdays(data$date) %in% c('Sunday','Saturday')
transform(data ,week = ifelse(weekdays(data$date %in% c('Sunday','Saturday') ,"Weekend","Weekday" ))
)
transform(data ,week = ifelse(weekdays(data$date %in% c('Sunday','Saturday') ,"Weekend","Weekday" )))
?ifelse
transform(data ,week = ifelse(weekdays(data$date) %in% c('Sunday','Saturday') ,"Weekend","Weekday" ))
stripplot(imp, pch = 20, cex = 1.2)
imputedData=complete(imp)
